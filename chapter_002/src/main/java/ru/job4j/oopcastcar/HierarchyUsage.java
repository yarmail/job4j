package ru.job4j.oopcastcar;

/**
 * 3.1. Приведение типов.
 * Повышение типа и понижение типа. [#181322]
 */
public class HierarchyUsage {
    public static void main(String[] args) {
        /* создаем объекта класса Car. */
        Car car = new Car();
/*
Up casting
Теперь этот объект можно записать в переменную
с типом Transport и Object.
Делаем приведение к типу родителя Transport.
*/
        Transport tp = car;
/*
Делаем приведение к типу родителя Object.
То есть мы приводим объект Car к типу любого
класса в его иерархии. Такое приведения типов
называется повышающим приведение (up casting).
Синтаксис этого приведения типов ничем не
отличается от обычной записи объекта в переменную.
*/
        Object obj = car;
/*
Down casting
Приведение типа при создании объекта.
Другой пример приведения называется понижающим
приведением (down casting).
На диаграмме мы опускаемся вниз.
Приведение типа за счет понижения по иерархии.
Понижающего приведения в коде лучше избегать,
по той причине, что код становится не стабильным
и нам приходится догадываться, к какому типу данных
нужно сделать приведение. Так же при понижающем
приведении используется дополнительный синтаксис.
Перед переменной нужно указать тип данных
к которому нужно привести.
Этот тип указывается в обычных скобках.
*/
        Object ocar = new Car();
        Car carFromObject = (Car) ocar;
/*
Ошибка в приведении типа. Код завершится
с ошибкой приведения типов ClassCastException
Мы ошиблись в предположении и сделали приведение
типа к неверному классу. В результате программа
завершится с ошибкой.

        Object bicycle = new Bicycle();
        Car cb = (Car) bicycle;
*/
    }
}
