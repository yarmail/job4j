package ru.job4j.oop.point;

/*
2.1. Рефакторинг - Расстояние между точками. [#122587]

В этом задании мы перепишем код в классе Point таким образом,
чтобы он стал использовать объекты.

Любое изменение кода, которое связано с улучшением
его использования называется рефакторинг кода.

У нас есть класс с методом, который вычисляет
расстояние по точкам x1 x2 y1 y2.

---
package ru.job4j.condition;

import static java.lang.Math.sqrt;
import static java.lang.Math.pow;

public class Point {
    public double distance(int x1, int y1, int x2, int y2) {
        return sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2));
    }
}
---
Поля.
Наша задача переписать этот код в ООП стиле. Что это значит?
Это значит, что нам нужно уйти от прямой работы
с примитивными типами и начать использовать объекты.

Объект позволяет забыть о деталях внутренней работы,
позволяет абстрагироваться от реализации.

Нам это дает возможность работать с большими объемами кода.
Например, мы используем машину не заботясь о ее внутреннем
устройстве. Это происходит за счет того, что машина это цельный объект.
Хотя сама машина состоит из более мелких деталей. К
оторые мы можем рассмотреть по отдельности.

Реализация.
В начале нужно понять, а что в этом задании является
цельным объектом? Цельным объектом здесь будет
точка в системе координат.

То есть объект, который содержит координаты x и y.

Состояние в объекте хранятся в полях.
Поля это переменные принадлежащие конкретному объекту.

 */

