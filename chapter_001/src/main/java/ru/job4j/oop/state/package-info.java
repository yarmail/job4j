package ru.job4j.oop.state;

/*
1.8. Состояние объекта [#167388]

Рассмотрим классическую задачу.
У нас есть два сосуда с водой. Нужно перелить
из одного сосуда в другой всю воду.

Давайте сделаем класс Jar и создадим
в нем поле private int value.
В поле будет содержаться количество воды.

Теперь давайте добавим в него метод,
который будет принимать объект типа Jar.
Так же напишем метод main с демонстрацией работы.

Теперь давайте разберемся, что произошло в методе main.
Вначале мы создаем два объекта first, second.
В каждом объекте хранятся свои данные.

В first value = 10. в second value = 5.

Дальше мы выводим на консоль значение
value для каждого объекта.

А дальше идет главная строка.

first.pour(second);

У объекта first вызываем метод pour.
В нем есть поле this.value - this - указывает на то,
что нужно взять значение этой переменной
у объекта для которого мы вызываем метод,
то есть если мы вызываем метод pour у объекта first,
то this.value будет 10.

Если мы вызовем у объекта second метод pour,
то для него будет значение this.value  равно 5.

Дальше в методе pour передается переменная another.

У нее мы тоже можем получить значение,
но обращаться к полю этого объекта мы должны
через имя переменной another.value.

*/

/*
Задание
1. Создать класс ru.job4j.oop.Battery.
В нем должно быть поле private int load.

2. Создать метод public void exchange(Battery another).
Этот метод должен списывать заряд из батареи
у кого вызывали метод exchange и добавить
к объекту another.
 */