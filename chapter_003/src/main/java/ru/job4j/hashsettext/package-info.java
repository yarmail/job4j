package ru.job4j.hashsettext;

/*
2. Идентичные тексты [#212655]
Как вы уже поняли, HashSet отлично подходит
для проверки, что коллекция содержит только
уникальные элементы.

Давайте рассмотрим ситуацию с генерацией текста.
Представим, что мы пишем поисковой движок уникальных статей.

Писать уникальные тексты дорого, поэтому часть
недобросовестных владельцев сайтов генерируют тексты.

В примитивном случае статья генерируется на
основании другой статьи перестановкой слов.

Нам нужно написать метод, который
будет сравнивать два текста.

Если они состоят из один и тех же слов,
то мы считаем, что текст не уникальный.

Например. Одинаковые тексты.
"Мы делаем дома и коттеджи" и "Мы делаем коттеджи и дома".
Оба текста состоят из одинаковых слов.

---

Алгоритм решения задания.
1. Преобразовать строку в массив слов.
Для этого используется метод String.split(" ").
2. Массив строк вставить через цикл
for-each в коллекцию HashSet.
3. Преобразовать проверяемый текст
в массив слов по аналогии с пунктом 1.
4. Проверить массив строк через цикл for-each
в коллекции HashSet используя метод contains.

Если Вы посмотрите на метод contains, то увидите,
что этот метод объявляется в интерфейсе
java.util.Collection. То есть, этот метод есть в любой коллекции.
Но в HashSet он работает за константное время.
То есть не зависимо от количества элементов в коллекции.
Про временные сложности мы будем говорить в следующем уровне.

 */